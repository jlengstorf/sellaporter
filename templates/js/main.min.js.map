{"version":3,"sources":["webpack:///js/main.min.js","webpack:///./scripts/main.js","webpack:///./scripts/blocks/sp-popover.js","webpack:///./scripts/utils/array_helpers.js"],"names":["webpackJsonp","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_spPopover","_classCallCheck","instance","Constructor","TypeError","_showPopover","__popover","classList","remove","__config","transitionClasses","hide","animate","_hidePopover","add","setTimeout","transitionSpeed","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","value","_array_helpers","popoverClass","buttonClasses","SellaporterPopover","this","document","getElementsByClassName","querySelector","addEventListener","event","preventDefault","registerClickHandlers","sel","toArray","cls","intersect","arrOne","arrTwo","concat","console","error","dir","sortedA","sort","sortedB","commonValues","iA","iB","push","val","arr","undefined","_typeof","keys","map","Symbol","iterator","constructor"],"mappings":"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","file":"js/main.min.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _spPopover = __webpack_require__(1);\n\t\n\tvar _spPopover2 = _interopRequireDefault(_spPopover);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/*\n\t * # Sellaporter Scripts\n\t * The entry point for all Sellaporter scripts.\n\t */\n\t\n\t// Load styles into webpack. They're output to their own bundle.\n\t__webpack_require__(3);\n\t\n\t// Block-specific scripts\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\n\tnteraction handling and validation for the popover.\n\tn\t\n\t// document.addEventListener('click', event => {\n\t\n\t//   if (event.target.classList.contains('sp-hero__button--popover')) {\n\t//     event.preventDefault();\n\t//     console.log('CTA button clicked!');\n\t//   }\n\t\n\t// });\n\t\n\t/*\n\t * Load dependencies and helper functions.\n\t */\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _array_helpers = __webpack_require__(2);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*\n\t * Create \"private class properties\" by keeping them locked in module scope.\n\t */\n\tvar __config = {\n\t  popoverClass: 'sp-popover',\n\t  buttonClasses: ['sp-hero__button--popover', 'sp-button--popover', 'sp-cta__button--popover', 'sp-pricing__button--popover'],\n\t  transitionClasses: {\n\t    animate: 'sp-popover--fade-out',\n\t    hide: 'sp-popover--hidden'\n\t  },\n\t  transitionSpeed: 150\n\t};\n\t\n\tvar __popover = false;\n\t\n\tvar SellaporterPopover = function () {\n\t  function SellaporterPopover() {\n\t    _classCallCheck(this, SellaporterPopover);\n\t\n\t    // There _should_ only ever be a single popover, so grab the first one.\n\t    __popover = document.getElementsByClassName(__config.popoverClass)[0];\n\t\n\t    // If no popover exists in the DOM, we're done here.\n\t    if (!!__popover) {\n\t\n\t      // Since a close button only makes sense if JS works, add it here.\n\t      // _addCloseBtn();\n\t\n\t      document.querySelector('.' + __config.popoverClass + '__close-btn').addEventListener('click', function (event) {\n\t        event.preventDefault();\n\t        _hidePopover();\n\t      });\n\t\n\t      this.registerClickHandlers();\n\t    }\n\t  }\n\t\n\t  _createClass(SellaporterPopover, [{\n\t    key: 'registerClickHandlers',\n\t    value: function registerClickHandlers() {\n\t      document.addEventListener('click', function (event) {\n\t        var sel = (0, _array_helpers.toArray)(__config.buttonClasses);\n\t        var cls = (0, _array_helpers.toArray)(event.target.classList);\n\t        if ((0, _array_helpers.intersect)(sel, cls).length) {\n\t          event.preventDefault();\n\t          _showPopover();\n\t        }\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return SellaporterPopover;\n\t}();\n\t\n\tvar instance = new SellaporterPopover();\n\t\n\texports.default = instance;\n\t\n\t/*\n\t * Helper functions\n\t */\n\t\n\tfunction _addCloseBtn() {\n\t  var closeBtn = document.createElement('button');\n\t\n\t  closeBtn.classList.add(__config.popoverClass + '__close-btn');\n\t  closeBtn.textContent = 'Ã—';\n\t  closeBtn.addEventListener('click', function (event) {\n\t    event.preventDefault();\n\t    _hidePopover();\n\t  });\n\t\n\t  __popover.appendChild(closeBtn);\n\t}\n\t\n\tfunction _showPopover() {\n\t\n\t  // Make the popover visible by removing the class that hides it.\n\t  __popover.classList.remove(__config.transitionClasses.hide);\n\t  __popover.classList.remove(__config.transitionClasses.animate);\n\t}\n\t\n\tfunction _hidePopover() {\n\t\n\t  // Make the popover visible by removing the class that hides it.\n\t  __popover.classList.add(__config.transitionClasses.animate);\n\t\n\t  // Hide it for real once the animation is complete.\n\t  setTimeout(function () {\n\t    __popover.classList.add(__config.transitionClasses.hide);\n\t  }, __config.transitionSpeed);\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.intersect = intersect;\n\texports.toArray = toArray;\n\t/**\n\t * Finds all shared values between two arrays in an efficient way. This\n\t * function is lifted almost verbatim from phant0m's answer on StackOverflow.\n\t *\n\t * NOTE: The arrays MUST contain the same types; mixed values WILL NOT work.\n\t *\n\t * @link http://stackoverflow.com/a/12437683/463471 phant0m on StackOverflow\n\t *\n\t * @param  {array} arrOne an array to compare\n\t * @param  {array} arrTwo another array to compare\n\t * @return {array}       matched values\n\t */\n\tfunction intersect(arrOne, arrTwo) {\n\t\n\t  // Bail if the arrays aren't arrays.\n\t  if (typeof arrOne.concat !== 'function' || typeof arrTwo.concat !== 'function') {\n\t    console.error('intersect() requires arguments to be arrays or array-like objects.');\n\t    console.dir(arrOne);\n\t    console.dir(arrTwo);\n\t    return [];\n\t  }\n\t\n\t  // Sort the arrays so the values match in order.\n\t  var sortedA = arrOne.concat().sort();\n\t  var sortedB = arrTwo.concat().sort();\n\t  var commonValues = [];\n\t  var iA = 0;\n\t  var iB = 0;\n\t\n\t  // Loop until we run out of values in one or both arrays.\n\t  while (iA < arrOne.length && iB < arrTwo.length) {\n\t\n\t    /*\n\t     * If the values at the current indices match, add them to the common array\n\t     * and increment both counters.\n\t     */\n\t    if (sortedA[iA] === sortedB[iB]) {\n\t      commonValues.push(sortedA[iA]);\n\t      iA++;\n\t      iB++;\n\t    }\n\t\n\t    /*\n\t     * If the values _don't_ match, only update the counter for the array with\n\t     * the lower value.\n\t     */\n\t    else if (sortedA[iA] < sortedB[iB]) {\n\t        iA++;\n\t      } else {\n\t        iB++;\n\t      }\n\t  }\n\t\n\t  return commonValues;\n\t}\n\t\n\tfunction toArray(val) {\n\t\n\t  // Or array-like objects.\n\t  var arr = undefined;\n\t\n\t  if (typeof val.concat === 'function') {\n\t    return val;\n\t  }\n\t\n\t  switch (typeof val === 'undefined' ? 'undefined' : _typeof(val)) {\n\t\n\t    case 'object':\n\t      arr = Object.keys(val).map(function (key) {\n\t        return val[key];\n\t      });\n\t      break;\n\t\n\t    /*\n\t     * This will help with strings and integers, but otherwise you'll probably\n\t     * see unexpected results. It's only here to avoid an error.\n\t     */\n\t    default:\n\t      arr = [val];\n\t  }\n\t\n\t  return arr;\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** js/main.min.js\n **/","/*\n * # Sellaporter Scripts\n * The entry point for all Sellaporter scripts.\n */\n\n// Load styles into webpack. They're output to their own bundle.\nrequire('../styles/sellaporter.css');\n\n// Block-specific scripts\nimport spPopover from './blocks/sp-popover';\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/main.js\n **/","/*\n * Interaction handling and validation for the popover.\n */\n\n// document.addEventListener('click', event => {\n\n//   if (event.target.classList.contains('sp-hero__button--popover')) {\n//     event.preventDefault();\n//     console.log('CTA button clicked!');\n//   }\n\n// });\n\n/*\n * Load dependencies and helper functions.\n */\nimport {intersect, toArray} from '../utils/array_helpers';\n\n/*\n * Create \"private class properties\" by keeping them locked in module scope.\n */\nconst __config = {\n  popoverClass: 'sp-popover',\n  buttonClasses: [\n    'sp-hero__button--popover',\n    'sp-button--popover',\n    'sp-cta__button--popover',\n    'sp-pricing__button--popover',\n  ],\n  transitionClasses: {\n    animate: 'sp-popover--fade-out',\n    hide: 'sp-popover--hidden',\n  },\n  transitionSpeed: 150,\n};\n\nlet __popover = false;\n\nclass SellaporterPopover {\n\n  constructor() {\n\n    // There _should_ only ever be a single popover, so grab the first one.\n    __popover = document.getElementsByClassName(__config.popoverClass)[0];\n\n    // If no popover exists in the DOM, we're done here.\n    if (!!__popover) {\n\n      // Since a close button only makes sense if JS works, add it here.\n      // _addCloseBtn();\n\n      document.querySelector(`.${__config.popoverClass}__close-btn`).addEventListener('click', event => {\n        event.preventDefault();\n        _hidePopover();\n      });\n\n      this.registerClickHandlers();\n    }\n  }\n\n  registerClickHandlers() {\n    document.addEventListener('click', event => {\n      const sel = toArray(__config.buttonClasses);\n      const cls = toArray(event.target.classList);\n      if (intersect(sel, cls).length) {\n        event.preventDefault();\n        _showPopover();\n      }\n    });\n  }\n\n}\n\nconst instance = new SellaporterPopover();\n\nexport default instance;\n\n/*\n * Helper functions\n */\n\nfunction _addCloseBtn() {\n  const closeBtn = document.createElement('button');\n\n  closeBtn.classList.add(`${__config.popoverClass}__close-btn`);\n  closeBtn.textContent = '\\u00D7';\n  closeBtn.addEventListener('click', event => {\n    event.preventDefault();\n    _hidePopover();\n  });\n\n  __popover.appendChild(closeBtn);\n}\n\nfunction _showPopover() {\n\n  // Make the popover visible by removing the class that hides it.\n  __popover.classList.remove(__config.transitionClasses.hide);\n  __popover.classList.remove(__config.transitionClasses.animate);\n}\n\nfunction _hidePopover() {\n\n  // Make the popover visible by removing the class that hides it.\n  __popover.classList.add(__config.transitionClasses.animate);\n\n  // Hide it for real once the animation is complete.\n  setTimeout(() => {\n    __popover.classList.add(__config.transitionClasses.hide);\n  },  __config.transitionSpeed);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/blocks/sp-popover.js\n **/","/**\n * Finds all shared values between two arrays in an efficient way. This\n * function is lifted almost verbatim from phant0m's answer on StackOverflow.\n *\n * NOTE: The arrays MUST contain the same types; mixed values WILL NOT work.\n *\n * @link http://stackoverflow.com/a/12437683/463471 phant0m on StackOverflow\n *\n * @param  {array} arrOne an array to compare\n * @param  {array} arrTwo another array to compare\n * @return {array}       matched values\n */\nexport function intersect(arrOne, arrTwo) {\n\n  // Bail if the arrays aren't arrays.\n  if (typeof arrOne.concat !== 'function' || typeof arrTwo.concat !== 'function') {\n    console.error('intersect() requires arguments to be arrays or array-like objects.');\n    console.dir(arrOne);\n    console.dir(arrTwo);\n    return [];\n  }\n\n  // Sort the arrays so the values match in order.\n  const sortedA = arrOne.concat().sort();\n  const sortedB = arrTwo.concat().sort();\n  let commonValues = [];\n  let iA = 0;\n  let iB = 0;\n\n  // Loop until we run out of values in one or both arrays.\n  while (iA < arrOne.length && iB < arrTwo.length) {\n\n    /*\n     * If the values at the current indices match, add them to the common array\n     * and increment both counters.\n     */\n    if (sortedA[iA] === sortedB[iB]) {\n      commonValues.push(sortedA[iA]);\n      iA++;\n      iB++;\n    }\n\n    /*\n     * If the values _don't_ match, only update the counter for the array with\n     * the lower value.\n     */\n    else if (sortedA[iA] < sortedB[iB]) {\n      iA++;\n    } else {\n      iB++;\n    }\n  }\n\n  return commonValues;\n}\n\nexport function toArray(val) {\n\n  // Or array-like objects.\n  let arr;\n\n  if (typeof val.concat === 'function') {\n    return val;\n  }\n\n  switch (typeof val) {\n\n    case 'object':\n      arr = Object.keys(val).map(key => val[key]);\n      break;\n\n    /*\n     * This will help with strings and integers, but otherwise you'll probably\n     * see unexpected results. It's only here to avoid an error.\n     */\n    default:\n      arr = [val];\n  }\n\n  return arr;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/utils/array_helpers.js\n **/"],"sourceRoot":""}